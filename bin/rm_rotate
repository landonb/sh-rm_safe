#!/bin/bash
# vim:tw=0:ts=2:sw=2:et:norl:ft=sh
# Project: https://github.com/landonb/sh-rm_safe#ðŸ—‘
# License: MIT

DUBS_USE_TRASH_DIR="${DUB_TRASHHOME:-${HOME}}"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

echo_boxy=false

# 2016-04-26: I added empty_trashes because, while trashes were being
# created on different devices from rm_safe, rmtrash was only emptying
# the trash in the user's home.
#   Also: I find myself feeling more comfortable moving .trash to .trash-TBD
#   for a while and then deleting the .trash-TBD, just in case I don't, say,
#   in a week realize I deleted something. So here's a two-step trash:
#   if you call rmtrash once, it'll temporarily backup the .trash dirs;
#   when you call rmtrash again, it'll remove the last temporary backups.
#   In this manner, you can call rmtrash periodically, like once a month
#   or whatever, and you won't have to worry about accidentally deleting
#   things.
#   MAYBE: You could do an anacron check on the timestamp of the .trash-TBD
#          and call empty_trashes after a certain amount of time has elapsed.
empty_trashes () {
  # locate .trash | grep "\/\.trash$"
  local device_path=''
  for device_path in $( \
    mount \
      | grep \
        -e " type fuse.encfs (" \
        -e " type fuse.gocryptfs (" \
        -e " type ext4 (" \
      | awk '{print $3}' \
  ); do
    local trash_path=''
    if [[ "${device_path}" == "/" ]]; then
      trash_path="${DUBS_USE_TRASH_DIR}/.trash"
    else
      trash_path="${device_path}/.trash"
    fi
    YES_OR_NO="N"
    if [[ -d "${trash_path}" ]]; then
      # FIXME/MAYBE/LATER: Disable asking if you find this code solid enough.
      local yes_or_no=""
      echo -n "Empty all items from trash at â€˜${trash_path}â€™? [y/n] "
      read -e yes_or_no
      if [[ ${yes_or_no^^} == "Y" ]]; then
        if [[ -d "${trash_path}-TBD" ]]; then
          /bin/rm -rf -- "${trash_path}-TBD"
        fi
        /bin/mv "${trash_path}" "${trash_path}-TBD"
        touch "${trash_path}-TBD"
        mkdir "${trash_path}"
      else
        echo "Skip! User said not to empty â€˜${trash_path}â€™"
      fi
    else
      echo "Skip! No trash at â€˜${trash_path}â€™"
    fi
  done
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

if [ "${BASH_SOURCE[0]}" = "$0" ]; then
  empty_trashes "${@}"
else
  export -f empty_trashes
fi

